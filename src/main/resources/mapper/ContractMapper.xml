<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonyou.cons.dao.ConDao">

	<resultMap type="com.yonyou.cons.entity.Contract" id="Contract">
		<id column="conid" property="conid" jdbcType="VARCHAR" />
		<result column="conname" property="conname" jdbcType="VARCHAR" />
		<result column="company" property="company" jdbcType="VARCHAR" />
		<result column="starttime" property="startDate" jdbcType="VARCHAR" />
		<result column="endtime" property="endDate" jdbcType="VARCHAR" />
		<result column="picture" property="picture" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="userid" property="userid" jdbcType="VARCHAR" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />


		<result column="invqty" property="invqty" jdbcType="INTEGER" />
	</resultMap>
	<resultMap type="com.yonyou.cons.entity.ConQty" id="ConQtyMap">
		<result column="month" property="month" jdbcType="VARCHAR" />
		<result column="count" property="qty" jdbcType="INTEGER" />
	</resultMap>
	<resultMap type="com.yonyou.cons.entity.User" id="User">
		<result column="email" property="email" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="cons">
		con.conid,
		con.conname,
		con.starttime,
		con.endtime,
		con.picture,
		con.state,
		con.userid,
		con.uid,
		username
	</sql>
	<sql id="con">
		conid,
		conname,
		starttime,
		endtime,
		picture,
		state,
		userid,
		uid
	</sql>
	<!-- 添加新合同 -->
	<insert id="addContract" parameterType="com.yonyou.cons.entity.Contract">
		INSERT INTO contract
		(conid,conname,company,starttime,endtime,picture,state,userid,uid)
		VALUES(#{conid},#{conname},#{company},#{startDate},#{endDate},#{picture},#{state},#{userid},#{uid})
	</insert>

	<!-- 根据相关id查找合同 -->
	<select id="findContracsByUid" parameterType="String" resultMap="Contract">
		SELECT
		<include refid="cons" />
		FROM
		contract con
		inner join user
		on user.userid=con.uid
		where
		con.uid=#{userid} or con.userid=#{userid} ORDER BY endtime
		DESC
	</select>

	<!-- 根据关键字查询合同 -->
	<select id="findContractByWord" parameterType="String"
		resultMap="Contract">
		SELECT
		<include refid="cons" />
		FROM(SELECT
		<include refid="con" />
		FROM contract WHERE uid=#{userid} OR userid=#{userid}) con
		INNER JOIN
		USER
		ON user.userid=con.uid
		WHERE con.conname LIKE '%${part}%'
		ORDER BY
		endtime
		DESC
	</select>
	<!-- 根据合同id更新合同 -->
	<update id="updateCon" parameterType="String">
		update contract
		set state=1
		where conid=#{conid}
	</update>
	<!-- 根据合同id查找合同 -->
	<select id="findContractByCid" parameterType="String" resultMap="Contract">
		SELECT
		<include refid="con" />
		FROM
		contract
		where conid=#{cid}
	</select>
	<!-- 根据状态查询合同 -->
	<select id="findContractByState" parameterType="String"
		resultMap="Contract">
		SELECT
		<include refid="cons" />
		FROM
		contract con
		inner join user
		on con.uid=user.userid
		where con.state
		like "%${state}%"
	</select>
	<!-- 合同报表查询已完成 -->
	<select id="findCons" parameterType="String" resultMap="ConQtyMap">
		SELECT
		MONTH(endtime) MONTH,COUNT(1) COUNT FROM contract WHERE endtime LIKE
		'%${year}%' AND state=1 GROUP BY MONTH(endtime)
	</select>
	<!-- 合同报表查询未完成 -->
	<select id="findConsNo" parameterType="String" resultMap="ConQtyMap">
		SELECT
		MONTH(endtime) MONTH,COUNT(1) COUNT FROM contract WHERE endtime LIKE
		'%${year}%' AND state=0 GROUP BY MONTH(endtime)
	</select>
	<!-- 查询合同总数量 -->
	<select id="findConsNum" resultType="String">
		SELECT COUNT(1) FROM
		contract
	</select>
	<!-- 根据月份查看临期合同的用户邮箱 -->
	<select id="getEmailForCon" parameterType="String" resultMap="User">
		SELECT u.email FROM contract c INNER JOIN USER u ON
		c.userid=u.userid WHERE c.endtime LIKE "${date}%" and c.state=0 GROUP BY u.email
	</select>
</mapper>